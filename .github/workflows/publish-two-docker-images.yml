name: Publish ubi8 & centos7

on:
  workflow_call:
    secrets:
      dockeHubUser:
        required: true
      dockerHubToken:
        required: true
    inputs:
      module:
        required: true
        type: string
      imageName:
        required: true
        type: string
      buildArgs:
        required: true
        type: string
jobs:
  centos7:
    name: Publish centos7
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.dockeHubUser }}
          password: ${{ secrets.dockerHubToken }}
      -
        name: Docker meta - centos7
        id: meta-centos7
        uses: docker/metadata-action@v3
        with:
          images: ${{inputs.imageName}}-centos7
          tags: |
            type=sha
            type=raw,value=latest
      -
        name: Build and push centos7
        uses: docker/build-push-action@v2
        with:
          context: ${{inputs.module}}
          file: ${{inputs.module}}/Dockerfile.centos7
          build-args: ${{inputs.buildArgs}}
          builder: ${{ steps.buildx.outputs.name }}
          push: ${{ github.event_name == 'push' && contains(github.ref, 'refs/tags/') }}
          tags: ${{ steps.meta-centos7.outputs.tags }}
          labels: ${{ steps.meta-centos7.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha
  ubi8:
    name: Publish ubi8
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.dockeHubUser }}
          password: ${{ secrets.dockerHubToken }}
      -
        name: Docker meta - ubi8
        id: meta-ubi8
        uses: docker/metadata-action@v3
        with:
          images: ${{inputs.imageName}}-ubi8
          tags: |
            type=sha
            type=raw,value=latest
      -
        name: Build and push ubi
        uses: docker/build-push-action@v2
        with:
          context: ${{inputs.module}}
          file: ${{inputs.module}}/Dockerfile.ubi8
          build-args: ${{inputs.buildArgs}}
          builder: ${{ steps.buildx.outputs.name }}
          push: ${{ github.event_name == 'push' && contains(github.ref, 'refs/tags/') }}
          tags: ${{ steps.meta-ubi8.outputs.tags }}
          labels: ${{ steps.meta-ubi8.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha
